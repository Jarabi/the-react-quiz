{
  "questions": [
    {
      "question": "Which is the most popular JavaScript framework?",
      "options": [
        "Angular",
        "React",
        "Svelte",
        "Vue"
      ],
      "correctOption": 1,
      "points": 10,
      "category": "Fundamentals",
      "id": "4370"
    },
    {
      "question": "Which company invented React?",
      "options": [
        "Google",
        "Apple",
        "Netflix",
        "Facebook"
      ],
      "correctOption": 3,
      "points": 10,
      "category": "Fundamentals",
      "id": "d4e8"
    },
    {
      "question": "What's the fundamental building block of React apps?",
      "options": [
        "Components",
        "Blocks",
        "Elements",
        "Effects"
      ],
      "correctOption": 0,
      "points": 10,
      "category": "Components & Props",
      "id": "ada6"
    },
    {
      "question": "What's the name of the syntax we use to describe the UI in React components?",
      "options": [
        "FBJ",
        "Babel",
        "JSX",
        "ES2015"
      ],
      "correctOption": 2,
      "points": 10,
      "category": "Components & Props",
      "id": "fc39"
    },
    {
      "question": "How does data flow naturally in React apps?",
      "options": [
        "From parents to children",
        "From children to parents",
        "Both ways",
        "The developers decides"
      ],
      "correctOption": 0,
      "points": 20,
      "category": "Components & Props",
      "id": "d19c"
    },
    {
      "question": "How to pass data into a child component?",
      "options": [
        "State",
        "Props",
        "PropTypes",
        "Parameters"
      ],
      "correctOption": 1,
      "points": 10,
      "category": "Components & Props",
      "id": "17dc"
    },
    {
      "question": "When to use derived state?",
      "options": [
        "Whenever the state should not trigger a re-render",
        "Whenever the state can be synchronized with an effect",
        "Whenever the state should be accessible to all components",
        "Whenever the state can be computed from another state variable"
      ],
      "correctOption": 3,
      "points": 30,
      "category": "State & Events",
      "id": "8e67"
    },
    {
      "question": "What triggers a UI re-render in React?",
      "options": [
        "Running an effect",
        "Passing props",
        "Updating state",
        "Adding event listeners to DOM elements"
      ],
      "correctOption": 2,
      "points": 20,
      "category": "State & Events",
      "id": "fc78"
    },
    {
      "question": "When do we directly \"touch\" the DOM in React?",
      "options": [
        "When we need to listen to an event",
        "When we need to change the UI",
        "When we need to add styles",
        "Almost never"
      ],
      "correctOption": 3,
      "points": 20,
      "category": "State & Events",
      "id": "3e6d"
    },
    {
      "question": "In what situation do we use a callback to update state?",
      "options": [
        "When updating the state will be slow",
        "When the updated state is very data-intensive",
        "When the state update should happen faster",
        "When the new state depends on the previous state"
      ],
      "correctOption": 3,
      "points": 30,
      "category": "State & Events",
      "id": "6fa2"
    },
    {
      "question": "If we pass a function to useState, when will that function be called?",
      "options": [
        "On each re-render",
        "Each time we update the state",
        "Only on the initial render",
        "The first time we update the state"
      ],
      "correctOption": 2,
      "points": 30,
      "category": "State & Events",
      "id": "534c"
    },
    {
      "question": "Which hook to use for an API request on the component's initial render?",
      "options": [
        "useState",
        "useEffect",
        "useRef",
        "useReducer"
      ],
      "correctOption": 1,
      "points": 20,
      "category": "Effects & Lifecycle",
      "id": "464a"
    },
    {
      "question": "Which variables should go into the useEffect dependency array?",
      "options": [
        "Usually none",
        "All our state variables",
        "All state and props referenced in the effect",
        "All variables needed for clean up"
      ],
      "correctOption": 2,
      "points": 30,
      "category": "Effects & Lifecycle",
      "id": "fdf6"
    },
    {
      "question": "An effect will always run on the initial render.",
      "options": [
        "True",
        "It depends on the dependency array",
        "False",
        "In depends on the code in the effect"
      ],
      "correctOption": 0,
      "points": 30,
      "category": "Effects & Lifecycle",
      "id": "1ea6"
    },
    {
      "question": "When will an effect run if it doesn't have a dependency array?",
      "options": [
        "Only when the component mounts",
        "Only when the component unmounts",
        "The first time the component re-renders",
        "Each time the component is re-rendered"
      ],
      "correctOption": 3,
      "points": 20,
      "category": "Effects & Lifecycle",
      "id": "2f24"
    },
    {
      "question": "What is React.memo used for?",
      "options": [
        "To memorize variable values between renders",
        "To prevent unnecessary re-renders of functional components",
        "To remember the previous state value",
        "To cache API responses"
      ],
      "correctOption": 1,
      "points": 30,
      "category": "Performance & Advanced",
      "id": "96b1"
    },
    {
      "question": "When should you use useMemo?",
      "options": [
        "For all expensive calculations",
        "When you want to optimize component rendering",
        "When you need to memoize a value based on dependencies",
        "Only when you're experiencing performance issues"
      ],
      "correctOption": 2,
      "points": 30,
      "category": "Performance & Advanced",
      "id": "3ba4"
    },
    {
      "question": "What problem does the Context API solve?",
      "options": [
        "State persistence across page reloads",
        "Form validation",
        "Props drilling through many component layers",
        "Server-side rendering"
      ],
      "correctOption": 2,
      "points": 20,
      "category": "State Management",
      "id": "8e77"
    },
    {
      "question": "What is the main benefit of custom hooks?",
      "options": [
        "They run faster than built-in hooks",
        "They allow for reusing stateful logic across components",
        "They can access component instances directly",
        "They bypass React's rendering cycle"
      ],
      "correctOption": 1,
      "points": 30,
      "category": "Advanced Hooks",
      "id": "0793"
    },
    {
      "question": "What is the Virtual DOM in React?",
      "options": [
        "A complete copy of the real DOM in memory",
        "A lightweight JavaScript representation of the real DOM",
        "A special browser API used by React",
        "A method to directly manipulate DOM nodes"
      ],
      "correctOption": 1,
      "points": 20,
      "category": "Performance & Advanced",
      "id": "f652"
    }
  ],
  "highScore": {
    "item": {
      "item": {
        "item": {
          "item": {
            "item": {
              "item": {
                "item": {
                  "item": {
                    "item": {
                      "item": {
                        "item": {
                          "item": {
                            "item": {
                              "item": {
                                "item": {
                                  "item": {
                                    "item": {
                                      "item": {
                                        "item": {
                                          "item": {
                                            "item": {
                                              "item": {
                                                "item": {
                                                  "item": {
                                                    "item": {
                                                      "item": {
                                                        "item": {
                                                          "item": {
                                                            "item": {
                                                              "item": {
                                                                "item": {
                                                                  "item": {
                                                                    "item": {
                                                                      "item": {
                                                                        "item": {
                                                                          "item": {
                                                                            "item": {
                                                                              "item": {
                                                                                "item": {
                                                                                  "item": {
                                                                                    "item": {
                                                                                      "item": {
                                                                                        "item": {
                                                                                          "item": {
                                                                                            "item": {
                                                                                              "item": {
                                                                                                "item": {
                                                                                                  "item": {
                                                                                                    "item": {
                                                                                                      "item": {
                                                                                                        "item": {
                                                                                                          "item": {
                                                                                                            "item": {
                                                                                                              "item": {
                                                                                                                "item": {
                                                                                                                  "item": {
                                                                                                                    "item": {
                                                                                                                      "item": {
                                                                                                                        "item": {
                                                                                                                          "item": {
                                                                                                                            "item": 0,
                                                                                                                            "highScore": 10
                                                                                                                          },
                                                                                                                          "highScore": 10
                                                                                                                        },
                                                                                                                        "highScore": 10
                                                                                                                      },
                                                                                                                      "highScore": 10
                                                                                                                    },
                                                                                                                    "highScore": 50
                                                                                                                  },
                                                                                                                  "highScore": 50
                                                                                                                },
                                                                                                                "highScore": 100
                                                                                                              },
                                                                                                              "highScore": 100
                                                                                                            },
                                                                                                            "highScore": 130
                                                                                                          },
                                                                                                          "highScore": 130
                                                                                                        },
                                                                                                        "highScore": 130
                                                                                                      },
                                                                                                      "highScore": 130
                                                                                                    },
                                                                                                    "highScore": 100
                                                                                                  },
                                                                                                  "highScore": 100
                                                                                                },
                                                                                                "highScore": 70
                                                                                              },
                                                                                              "highScore": 70
                                                                                            },
                                                                                            "highScore": 70
                                                                                          },
                                                                                          "highScore": 70
                                                                                        },
                                                                                        "highScore": 130
                                                                                      },
                                                                                      "highScore": 130
                                                                                    },
                                                                                    "highScore": 20
                                                                                  },
                                                                                  "highScore": 20
                                                                                },
                                                                                "highScore": 20
                                                                              },
                                                                              "highScore": 20
                                                                            },
                                                                            "highScore": 20
                                                                          },
                                                                          "highScore": 20
                                                                        },
                                                                        "highScore": 50
                                                                      },
                                                                      "highScore": 50
                                                                    },
                                                                    "highScore": 50
                                                                  },
                                                                  "highScore": 50
                                                                },
                                                                "highScore": 20
                                                              },
                                                              "highScore": 20
                                                            },
                                                            "highScore": 20
                                                          },
                                                          "highScore": 20
                                                        },
                                                        "highScore": 20
                                                      },
                                                      "highScore": 20
                                                    },
                                                    "highScore": 20
                                                  },
                                                  "highScore": 20
                                                },
                                                "highScore": 50
                                              },
                                              "highScore": 50
                                            },
                                            "highScore": 50
                                          },
                                          "highScore": 50
                                        },
                                        "highScore": 110
                                      },
                                      "highScore": 110
                                    },
                                    "highScore": 40
                                  },
                                  "highScore": 40
                                },
                                "highScore": 170
                              },
                              "highScore": 170
                            },
                            "highScore": 20
                          },
                          "highScore": 20
                        },
                        "highScore": 20
                      },
                      "highScore": 20
                    },
                    "highScore": 20
                  },
                  "highScore": 20
                },
                "highScore": 20
              },
              "highScore": 20
            },
            "highScore": 100
          },
          "highScore": 20
        },
        "highScore": 20
      },
      "highScore": 40
    },
    "highScore": 40
  }
}